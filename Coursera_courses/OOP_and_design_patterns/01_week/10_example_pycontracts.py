from contracts import contract


# Логическое И: если нужно проверить несколько условий, их можно просто записать через запятую:
@contract(x='>=0,<=1')
def f(x):
    pass


# Логическое ИЛИ: вертикальная черта:
@contract(x='<0|>1')
def f(x):
    pass

@contract(x='(int|float),>=0')
def f(x):
    pass


'''
Для списков возможны требования как к длине, так и к типу элементов и их значениям:

list[length contract](elements contract)

Примеры:

list[>0] — непустой список.

list(int) — список целых чисел, возможно пустой.

list(int,>0) — список положительных целых, возможно пустой.

list[>0,<=100](int,>0,<=1000) — непустой список из не более ста положительных целых чисел, не превышающих по значению тысячу.

Для словарей также можно ввести требования к их размеру, а также к типу ключа и/или типу значения:

dict[length contract](key contract: value contract)

Примеры:

dict[>0] — непустой словарь.

dict(str:*) — словарь со строками в качестве ключей и любыми типами значений.

dict[>0](str:(int,>0)) — непустой словарь с ключами-строками и положительными целочисленными значениями.
'''
