# -*- coding: utf-8 -*-
"""normalization_of_signs.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TzxUOMlny6aJZ_Qdg8DeLccTvg93BNhM
"""

import pandas as pd
from sklearn.linear_model import Perceptron
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import accuracy_score

train_data = 'perceptron-train.csv'
test_data = 'perceptron-test.csv'
train_df = pd.read_csv(train_data, names=['target', 'sign_1', 'sign_2'])
test_df = pd.read_csv(test_data, names=['target', 'sign_1', 'sign_2'])

train_y = train_df.target
test_y = test_df.target
features = ['sign_1', 'sign_2']
train_x = train_df[features]
test_x = test_df[features]

clf = Perceptron(random_state=241)
clf.fit(train_x, train_y)
predictions = clf.predict(test_x)
score = accuracy_score(test_y, predictions)
score

scaler = StandardScaler()
train_x_scaled = scaler.fit_transform(train_x)
test_x_scaled = scaler.transform(test_x)
clf_scaler = Perceptron(random_state=241)
clf_scaler.fit(train_x_scaled, train_y)
predictions_scaler = clf_scaler.predict(test_x_scaled)
score_scaler = accuracy_score(test_y, predictions_scaler)
score_scaler

scores = score_scaler - score
scores

