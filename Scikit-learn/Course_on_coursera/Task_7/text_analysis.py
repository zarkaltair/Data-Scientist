# -*- coding: utf-8 -*-
"""text_analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16scGwChVaHJS9Y04jFwj5SWtRi44sPY1
"""

import pandas as pd
import numpy as np
from sklearn import datasets
from sklearn.svm import SVC
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.model_selection import GridSearchCV
from sklearn.model_selection import KFold

newsgroups = datasets.fetch_20newsgroups(
                    subset='all', 
                    categories=['alt.atheism', 'sci.space'])

y = newsgroups.target
x = newsgroups.data

vectorizer = TfidfVectorizer()
x = vectorizer.fit_transform(x)

grid = {'C': np.power(10.0, np.arange(-5, 6))}
cv = KFold(n_splits=5, shuffle=True, random_state=241)
clf = SVC(kernel='linear', random_state=241)
gs = GridSearchCV(clf, grid, scoring='accuracy', cv=cv)
gs.fit(x, y)
C = gs.best_params_.get('C')
C

model = SVC(kernel='linear', random_state=241, C=C)
model.fit(x, y)

words = vectorizer.get_feature_names()
coef = pd.DataFrame(model.coef_.data, model.coef_.indices)
top_words = coef[0].map(lambda w: abs(w)).sort_values(ascending=False).head(10).index.map(lambda i: words[i])
top = sorted(top_words)
top