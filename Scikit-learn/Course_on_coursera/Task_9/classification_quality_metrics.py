# -*- coding: utf-8 -*-
"""classification_quality_metrics.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WhtcWKEXGEG5OOfFLZVBqq9OD5M1ldpc
"""

import pandas as pd
from sklearn.metrics import accuracy_score
from sklearn.metrics import precision_score
from sklearn.metrics import recall_score
from sklearn.metrics import f1_score
from sklearn.metrics import roc_auc_score
from sklearn.metrics import precision_recall_curve

df = pd.read_csv('classification.csv')
df.head(3)

x = df['true'].values
y = df['pred'].values

TP = 0
FP = 0
TN = 0
FN = 0
for i in range(len(x)):
    if x[i] == 1 and y[i] == 1:
        TP += 1
    elif x[i] == 0 and y[i] == 1:
        FP += 1
    elif x[i] == 1 and y[i] == 0:
        TN += 1
    else:
        FN += 1
ans_1 = TP/(TP + FP)
ans_2 = FP/(TP + FP)
ans_3 = TN/(TN + FN)
ans_4 = FN/(TN + FN)
ans_1, ans_2, ans_3, ans_4
TP, FP, TN, FN

accuracy_score(x, y)

precision_score(x, y)

recall_score(x, y)

f1_score(x, y)

df_scores = pd.read_csv('scores.csv')
df_scores.head(3)

# arr = [df]
features = ['score_logreg', 'score_svm', 'score_knn', 'score_tree']
df_scores[features]

roc_auc_score(df_scores['true'], df_scores['score_logreg'])

roc_auc_score(df_scores['true'], df_scores['score_svm'])

roc_auc_score(df_scores['true'], df_scores['score_knn'])

roc_auc_score(df_scores['true'], df_scores['score_tree'])

precision, recall, thresholds = precision_recall_curve(df_scores['true'], df_scores['score_logreg'])
precision, recall, thresholds

pr_scores = {}
for clf in df_scores.columns[1:]:
    pr_curve = precision_recall_curve(df_scores['true'], df_scores[clf])
    pr_curve_df = pd.DataFrame({'precision': pr_curve[0], 'recall': pr_curve[1]})
    pr_scores[clf] = pr_curve_df[pr_curve_df['recall'] >= 0.7]['precision'].max()

pd.Series(pr_scores).sort_values(ascending=False).head(1).index[0]