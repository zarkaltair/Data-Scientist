# -*- coding: utf-8 -*-
"""reducing_the_color_of_the_image.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HbEvCzS3hmu3y4aJZhNfYjYvxrDl5Gmc
"""

import pandas as pd
import numpy as np
import math
from skimage import img_as_float
from sklearn.cluster import KMeans

# %matplotlib inline
from skimage.io import imread, imsave
image = imread('parrots.jpg')
import pylab
pylab.imshow(image)

image_conv = img_as_float(image)
w, h, d = image_conv.shape

df = pd.DataFrame(np.reshape(image_conv, (w * h, d)), columns=['R', 'G', 'B'])
df.shape

kmeans = KMeans(init='k-means++', n_clusters=12, random_state=241)
kmeans.fit(df)

df['cluster'] = kmeans.fit_predict(df)

means = df.groupby('cluster').mean().values
mean_df = [means[c] for c in df['cluster'].values]
mean_image = np.reshape(mean_df, (w, h, d))
imsave('parrots_' + str(12) + '.jpg', mean_image)

parrots_12 = imread('parrots_12.jpg')
pylab.imshow(parrots_12)

medians = df.groupby('cluster').median().values
median_df = [medians[c] for c in df['cluster'].values]
median_image = np.reshape(median_df, (w, h, d))
# imsave('parrots_' + str(88) + '.jpg', mean_image)

parrots_88 = imread('parrots_88.jpg')
pylab.imshow(parrots_88)

mse = np.mean((image_conv - mean_image) ** 2)
psnr_mean = 10 * math.log10(float(1) / mse)
psnr_mean

mse = np.mean((image_conv - median_image) ** 2)
psnr_median = 10 * math.log10(float(1) / mse)
psnr_median